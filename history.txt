1 + 2
1 + 2
exec (compIO readLine print)
debugRaw (compIO readLine print)
compIO readLine print
"Yay" + "  " + ":D"
"Yay :D"
3421
5
eval "{x:true}"
eval "10 + 2"
eval "10 + 2"
eval "34"
eval "x"
eval "5"
eval "5"
eval "5;2"
eval "5"
Ratio.<==>
import qualified stdlib/experimental/Ratio exposing <==>
Ratio.<==>
Ratio.ratio
import qualified stdlib/experimental/Ratio exposing ratio
Ratio.ratio
ratio
import qualified stdlib/experimental/Ratio exposing ratio
Ratio.ratio
Ratio.fscript.5
Ratio.ratio
import qualified stdlib/experimental/Ratio
(1 % 3) <==> (3 % 9)
(1 % 3) == (3 % 9)
(5 % 4) </> (2 % 25)
5 % 4
import stdlib/experimental/Ratio
x
x = 5
x
x = 5
0 <= -1
0 <= 1
0 <= 0
5 <= 4
5 <= 6
5 <= 5
(\x -> x * x) $ 5
(\x -> x * x) <| 5
1::21
1::+19
1::20
1::19
1::+19
showR (5 % 85)
import stdlib/experimental/Ratio
showR (shorten (5 % 85))
showR (5 % 85)
import stdlib/experimental/Ratio
showR (5 % 85)
import stdlib/experimental/Ratio
showR (5 % 89)
showR (5 % 89)
import stdlib/experimental/Ratio
(9 % 213143) </> (2 % 19213)
(9 % 213143) </> (2 % 1)
(9 % 213143) / (2 % 1)
(9 % 213143) / 2
9 % 213143
3 % 4
import stdlib/experimental/Ratio
fromNum 3
fromNum 3
3 % 4
import stdlib/experimental/Ratio
3 % 4
(ratio 3 1) </> (ratio 5 4)
import stdlib/experimental/Ratio
(ratio 3 1) </> (ratio 5 4)
(ratio 3 1) </> (5 4)
(ratio 3 1) (5 4)
import stdlib/experimental/Ratio
invert (ratio 3 1)
invert (ratio 3)
invert 5
import stdlib/experimental/Ratio
invert 4
invert 4;
invert 4
invert
invert
invert 5
invert
import stdlib/experimental/Ratio
in
inver
i
4
invert
invert (ratio 1 3)
import stdlib/experimental/Ratio
import stdlib/experimental/Ratio
